{"version":3,"sources":["assests/images/icon-arrow.svg","Containers/Map/Map.js","Containers/Header/Header.js","Components/Spinner/Spinner.js","Containers/DataStorer/DataStorer.js","App.js","index.js"],"names":["module","exports","Maps","center","this","props","arr","zoom","Marker","position","TileLayer","url","attribution","Component","Header","state","searchData","inputChangeHandler","event","data","target","value","setState","className","onSubmit","e","sHandler","type","onChange","placeholder","src","require","alt","spinner","DataStorer","response","error","dataStorerHandler","res","location","city","region","country","ipAddress","ip","isp","timezone","lat","lng","onSubmitHandler","preventDefault","test","axios","get","then","catch","err","alert","display","Fragment","App","ReactDOM","render","document","getElementById"],"mappings":"+OAAAA,EAAOC,QAAU,IAA0B,wC,sMCmB5BC,E,uKAZP,OACI,kBAAC,IAAD,CAAKC,OAAQC,KAAKC,MAAMC,IAAKC,KAAM,IACnC,kBAACC,EAAA,EAAD,CAAQC,SAAUL,KAAKC,MAAMC,MAC7B,kBAACI,EAAA,EAAD,CACIC,IAAI,qDACJC,YAAY,gF,GARTC,aC4BJC,G,kNA5BXC,MAAQ,CACJC,WAAY,I,EAGhBC,mBAAqB,SAACC,GAClB,IAAMC,EAAOD,EAAME,OAAOC,MAC1B,EAAKC,SAAS,CAACN,WAAYG,K,uDAErB,IAAD,OACL,OAAQ,yBAAKI,UAAU,iBACX,kDACA,0BAAMC,SAAU,SAACC,GAAD,OAAO,EAAKpB,MAAMqB,SAASD,EAAE,EAAKV,MAAMC,cACpD,2BAAOW,KAAK,OACZN,MAAOjB,KAAKW,MAAMC,WAClBY,SAAU,SAACH,GAAD,OAAO,EAAKR,mBAAmBQ,IACzCI,YAAazB,KAAKC,MAAMwB,cACxB,4BAAQF,KAAK,UACb,yBAAKG,IAAKC,EAAQ,IAAwCC,IAAI,UAIlE,yBAAKT,UAAU,e,GAvBdV,cCKNoB,G,MAJC,kBACZ,yBAAKV,UAAU,UAAf,gBCkGWW,E,4MA7FXnB,MAAQ,CACJoB,SAAU,KACVC,OAAO,G,EAEXC,kBAAoB,SAACC,GACjB,IAAIH,EAAW,GACXA,EAASI,SAAT,UAAuBD,EAAInB,KAAKoB,SAASC,KAAzC,YAAiDF,EAAInB,KAAKoB,SAASE,OAAnE,YAA6EH,EAAInB,KAAKoB,SAASG,SAC/FP,EAASQ,UAAYL,EAAInB,KAAKyB,GAC9BT,EAASU,IAAMP,EAAInB,KAAK0B,IACxBV,EAASW,SAAWR,EAAInB,KAAKoB,SAASO,SACtCX,EAAS7B,IAAM,CAACgC,EAAInB,KAAKoB,SAASQ,IAAKT,EAAInB,KAAKoB,SAASS,KACzD,EAAK1B,SAAS,CACVa,SAAUA,K,EActBc,gBAAkB,SAAC/B,EAAMC,GACrBD,EAAMgC,iBACN,EAAK5B,SAAS,CAACa,SAAU,OACzB,IAAIxB,EAAM,uEAENA,EADA,2DAA2DwC,KAAKhC,GAC1DR,EAAM,WAAWQ,EAElB,uEAAuEgC,KAAKhC,GAC3ER,EAAM,UAAUQ,EAElB,mKAAmKgC,KAAKhC,GACvKR,EAAM,cAAcQ,EAGnB,GAEViC,IAAMC,IAAI1C,GACT2C,MAAK,SAAAhB,GACF,EAAKD,kBAAkBC,MAE1BiB,OAAM,SAAAC,GACHC,MAAM,iBACN,EAAKnC,SAAS,CAACc,OAAO,Q,kEAjCT,IAAD,OAChBgB,IAAMC,IAAI,wEACTC,MAAK,SAAAhB,GACF,EAAKD,kBAAkBC,MAE1BiB,OAAM,SAAAC,GACHC,MAAMD,GACN,EAAKlC,SAAS,CAACc,OAAO,S,+BAgC1B,IAAIsB,EAAU,KAmCd,OAhCIA,EADDtD,KAAKW,MAAMoB,SACC,kBAAC,IAAMwB,SAAP,KACP,kBAAC,EAAD,CAAQ9B,YAAazB,KAAKW,MAAMoB,SAASQ,UAAWjB,SAAUtB,KAAK6C,kBACnE,yBAAK1B,UAAU,kBACZ,yBAAKA,UAAU,eACX,yCACA,4BAAKnB,KAAKW,MAAMoB,SAASQ,YAHhC,IAIU,yBAAKpB,UAAU,YAAf,KACP,yBAAKA,UAAU,eACX,uCACA,4BAAKnB,KAAKW,MAAMoB,SAASI,WAPhC,IAQU,yBAAKhB,UAAU,YAAf,KACP,yBAAKA,UAAU,eACX,uCACA,kCAAQnB,KAAKW,MAAMoB,SAASW,WAXnC,IAYU,yBAAKvB,UAAU,YAAf,KACP,yBAAKA,UAAU,eACX,kCACA,4BAAKnB,KAAKW,MAAMoB,SAASU,OAGrC,yBAAKtB,UAAU,UACf,kBAAC,EAAD,CAAKjB,IAAKF,KAAKW,MAAMoB,SAAS7B,QAKhB,kBAAC,EAAD,MAGdF,KAAKW,MAAMqB,QACVsB,EAAU,sEAELA,M,GA3FQ7C,aCMV+C,MARf,WACE,OACE,yBAAKrC,UAAU,OACb,kBAAC,EAAD,QCHNsC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.98250fc7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-arrow.53ef8ed8.svg\";","import React, {Component} from 'react'\nimport './Map.css'\nimport { Map, Marker, TileLayer } from \"react-leaflet\";\n\nclass Maps extends Component {\n    \n    render() {\n        return (\n            <Map center={this.props.arr} zoom={12}>\n            <Marker position={this.props.arr} />   \n            <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            </Map>\n        )\n    }\n}\n\nexport default Maps","import React , { Component } from 'react';\nimport './Header.css'\nclass Header extends Component {\n\n    state = {\n        searchData: \"\"\n    }\n\n    inputChangeHandler = (event) => {\n        const data = event.target.value;\n        this.setState({searchData: data })\n    }\n    render() {\n        return (<div className=\"top-container\">\n                    <h1>IP Address Tracker</h1>\n                    <form onSubmit={(e) => this.props.sHandler(e,this.state.searchData)}>\n                        <input type=\"text\" \n                        value={this.state.searchData} \n                        onChange={(e) => this.inputChangeHandler(e)}\n                        placeholder={this.props.placeholder} />\n                        <button type=\"submit\">\n                        <img src={require('../../assests/images/icon-arrow.svg')} alt=\"img\"></img>\n                        </button>\n                    </form>\n                    \n                    <div className=\"Black\"></div>\n                    \n                </div>)\n    }\n}\n\n\nexport default Header;  ","import React from 'react'\nimport './Spinner.css'\n\nconst spinner = () => (\n    <div className=\"loader\">Loading...</div>\n)\n\nexport default spinner;","import React , {Component} from 'react'\nimport './DataStorer.css'\nimport axios from 'axios'\nimport Map from '../Map/Map'\nimport Header from '../Header/Header'\nimport Spinner from '../../Components/Spinner/Spinner'\n\nclass DataStorer extends Component {\n\n    state = {\n        response: null,\n        error: false\n    }\n    dataStorerHandler = (res) => {\n        let response = {}\n            response.location = `${res.data.location.city} ${res.data.location.region} ${res.data.location.country}`\n            response.ipAddress = res.data.ip\n            response.isp = res.data.isp\n            response.timezone = res.data.location.timezone\n            response.arr = [res.data.location.lat, res.data.location.lng]\n            this.setState({\n                response: response\n            })\n    }\n    componentDidMount() {\n        axios.get('https://geo.ipify.org/api/v1?apiKey=at_yaD49RYZEmMDnvY1pvIeIythcH4ct')\n        .then(res => {\n            this.dataStorerHandler(res)\n        })\n        .catch(err => {\n            alert(err)\n            this.setState({error: true})\n        })\n    }\n\n    onSubmitHandler = (event,data) => {\n        event.preventDefault()\n        this.setState({response: null})\n        let url = 'https://geo.ipify.org/api/v1?apiKey=at_yaD49RYZEmMDnvY1pvIeIythcH4ct'\n        if (/^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]\\.[a-zA-Z]{2,}$/.test(data)) {\n            url = url + '&domain='+data\n        }\n        else if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(data)) {\n            url = url + '&email='+data\n        }\n        else if(/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(data)){\n            url= url + '&ipAddress='+data\n        }\n        else {\n            url = ''\n        }\n        axios.get(url)\n        .then(res => {\n            this.dataStorerHandler(res)\n        })\n        .catch(err => {\n            alert(\"Invalid Input\")\n            this.setState({error: true})\n        })\n    }\n\n    render () {\n\n        let display = null;\n\n        if(this.state.response){\n            display = (<React.Fragment>\n                <Header placeholder={this.state.response.ipAddress} sHandler={this.onSubmitHandler}/>\n                <div className=\"Data-container\">\n                   <div className=\"item item-1\">\n                       <p>IP ADDRESS</p>\n                       <h2>{this.state.response.ipAddress}</h2>\n                   </div> <div className=\"adjust-1\">|</div>\n                   <div className=\"item item-2\">\n                       <p>LOCATION</p>\n                       <h2>{this.state.response.location}</h2>\n                   </div> <div className=\"adjust-1\">|</div>\n                   <div className=\"item item-3\">\n                       <p>TIMEZONE</p>\n                       <h2>UTC{this.state.response.timezone}</h2>\n                   </div> <div className=\"adjust-1\">|</div>\n                   <div className=\"item item-4\">\n                       <p>ISP</p>\n                       <h2>{this.state.response.isp}</h2>\n                   </div>\n           </div>\n           <div className=\"adjust\">\n           <Map arr={this.state.response.arr} />\n           </div>\n           </React.Fragment>)\n        }\n        else {\n               display = <Spinner />\n        }\n\n        if(this.state.error) {\n            display = <p>Something went wrong refresh the page.</p>\n        }\n        return ( display )\n    }\n}\n\nexport default DataStorer","import React from 'react';\nimport './App.css';\nimport DataStorer from './Containers/DataStorer/DataStorer'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DataStorer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}